syntax = "proto3";
option csharp_namespace = "TradeMarket.Facade.FacadeService.v1";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "tradebot/common/v1/common.proto";

package tradebot.facade.facade_service.v1;

service FacadeService{
	/*
		Подписка на изменение баланса пользователя (ЕДИНСТВЕННОГО)
	*/
	rpc SubscribeBalance(SubscribeBalanceRequest) returns (stream SubscribeBalanceResponse);

	/*
		Аутентификция на бирже по токену
	*/
	rpc AuthenticateToken(AuthenticateTokenRequest) returns (AuthenticateTokenResponse);

	/*
		Список доступных слотов на бирже
	*/
	rpc Slots(SlotsRequest) returns (stream SlotsResponse);

	/*
		Клиент говорит обновиться серверу
	*/
	rpc UpdateServerConfig (UpdateServerConfigRequest) returns (UpdateServerConfigResponse);

	/*
		Подписка на логи нужного сервиса
	*/
	//TODO в каждом сервисе нужно написать 
	rpc SubscribeLogs(SubscribeLogsRequest) returns (stream SubscribeLogsResponse);

}

message SubscribeLogsRequest{
	tradebot.common.v1.SubscribeLogsRequest r = 1;
}

message SubscribeLogsResponse{
	tradebot.common.v1.SubscribeLogsResponse response = 1;
}

message UpdateServerConfigRequest{
	tradebot.common.v1.UpdateServerConfigRequest request = 1;
}

message UpdateServerConfigResponse{
	tradebot.common.v1.UpdateServerConfigResponse response = 1;
}

message SubscribeBalanceRequest{
	tradebot.common.v1.SubscribeBalanceRequest request = 1;
}

message SubscribeBalanceResponse{
	tradebot.common.v1.SubscribeBalanceResponse response = 1;
}

message SlotsRequest{
	//TODO Тут должно быть обращение к конкретной бирже, но она пока одна
	google.protobuf.Empty empty = 1;
}
message SlotsResponse{
	string slot_name = 1;
}

message AuthenticateTokenRequest{
	string token = 1;
}

message AuthenticateTokenResponse{
	tradebot.common.v1.DefaultResponse response = 1;
}
