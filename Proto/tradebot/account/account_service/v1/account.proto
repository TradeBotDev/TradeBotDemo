syntax = "proto3";

option csharp_namespace = "TradeBot.Account.AccountService.v1";

package account;

// Сервис для входа в аккаунт или его регистрации.
service Account {
	// Метод входа в аккаунт
	rpc Login (LoginRequest) returns (LoginResponse);
	// Метод выхода из аккаунта
	rpc Logout (LogoutRequest) returns (LogoutResponse);
	// Метод регистрации аккаунта
	rpc Register (RegisterRequest) returns (RegisterResponse);
	// Проверка текущего пользователя на валидность по Id сессии
	rpc IsValidSession (IsValidSessionRequest) returns (IsValidSessionResponse);
	// Получение данных текущего пользователя
	rpc AccountData (AccountDataRequest) returns (AccountDataResponse);
}

// Данные для входа в аккаунт.
message LoginRequest {
	string email = 1;
	string password = 2;
}

// Ответ на запрос о входе в аккаунт.
message LoginResponse {
	AccountActionCode result = 1;
	string message = 2;
	string session_id = 3;
}

message LogoutRequest {
	string session_id = 1;
	bool save_exchange_accesses = 2;
}

// Ответ на запрос о выходе из аккаунта
message LogoutResponse {
	AccountActionCode result = 1;
	string message = 2;
}

// Данные для регистрации аккаунта.
message RegisterRequest {
	string email = 1;
	string password = 2;
	string verify_password = 3;
}

// Ответ на запрос о регистрации аккаунта.
message RegisterResponse {
	AccountActionCode result = 1;
	string message = 2;
}

// Запрос на проверку сессии на валидность.
message IsValidSessionRequest {
	string session_id = 1;
}

// Результат проверки сессии на валидность.
message IsValidSessionResponse {
	bool is_valid = 1;
	string message = 2;
}

// Запрос на получение данных пользователя.
message AccountDataRequest {
	string session_id = 1;
}

// Получение данных пользователя.
message AccountDataResponse {
	AccountActionCode result = 1;
	string message = 2;
	AccountInfo current_account = 3;
}

//Информация о пользователе, необходимая для отображения в UI
message AccountInfo {
	int32 account_id = 1;
	string email = 2;
	repeated ExchangeAccessInfo exchanges = 3;
}

// Информация о данных для доступа к бирже.
message ExchangeAccessInfo {
	int32 exchange_access_id = 1;
	ExchangeAccessCode code = 2;
	string name = 3;
	string token = 4;
	string refresh_token = 5;
	string logout_token = 6;
	string secret = 7;
}

// Коды всех бирж.
enum ExchangeAccessCode {
	EXCHANGE_ACCESS_CODE_UNSPECIFIED = 0;
	EXCHANGE_ACCESS_CODE_BITMEX = 1;
}

enum AccountActionCode {
	ACCOUNT_ACTION_CODE_UNSPECIFIED = 0;
	ACCOUNT_ACTION_CODE_SUCCESSFUL = 1;
	ACCOUNT_ACTION_CODE_FAILED = 2;
	ACCOUNT_ACTION_CODE_IS_NOT_FOUND = 3;
	ACCOUNT_ACTION_CODE_IS_EXISTS = 4;
}