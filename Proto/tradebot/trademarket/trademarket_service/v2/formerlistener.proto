syntax = "proto3";

option csharp_namespace = "TradeBot.TradeMarket.TradeMarketService.v2";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

import "tradebot/common/v1/common.proto";
package tradebot.trademarket.trademarket_service.v2;

service FormerListener {

	/*
		Покупает ордер по указанному ид и возвращает результат покупики (получилось / не получилось)
	*/
	rpc PlaceOrder (PlaceOrderRequest) returns (PlaceOrderResponse);
;
	/*
		Подписывается на ордера выбранного типа
	*/
	rpc SubscribeOrders(SubscribeOrdersRequest) returns (stream SubscribeOrdersResponse);

	/*
		подписка на изменения размещенных ордеров
	*/
	rpc SubscribeMyOrders(SubscribeMyOrdersRequest) returns (stream SubscribeMyOrdersResponse);

	/*
		Подписка на изменение баланса пользователя (ЕДИНСТВЕННОГО)
	*/
	rpc SubscribeBalance(SubscribeBalanceRequest) returns (stream SubscribeBalanceResponse);

	/*
		Подписка на логи нужного сервиса
	*/
	rpc SubscribeLogs(SubscribeLogsRequest) returns (stream SubscribeLogsResponse);
}

message SubscribeMyOrdersRequest{
	google.protobuf.Empty empty = 1;
}

message SubscribeMyOrdersResponse {
	tradebot.common.v1.Order changed = 2;
}

message SubscribeOrdersRequest{
	tradebot.common.v1.SubscribeOrdersRequest request = 1;
}

message SubscribeOrdersResponse{
	tradebot.common.v1.SubscribeOrdersResponse response = 1;
}

message SubscribeLogsRequest{
	tradebot.common.v1.SubscribeLogsRequest request = 1;
}

message SubscribeLogsResponse{
	tradebot.common.v1.SubscribeLogsResponse response = 1;
}

message SubscribeBalanceRequest{
	tradebot.common.v1.SubscribeBalanceRequest request = 1;
	string slot_name = 2;
}

message SubscribeBalanceResponse{
	tradebot.common.v1.SubscribeBalanceResponse response = 1;
}

message PlaceOrderRequest{
	double price = 1;
	double value = 2;
}

message PlaceOrderResponse{
	tradebot.common.v1.DefaultResponse response = 1;
}

